// <auto-generated />
using System;
using EbolaApp.App_Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EbolaApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220702225842_UpdateUserModel")]
    partial class UpdateUserModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EbolaApp.Models.MedicalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AbdominalPainAndCramping")
                        .HasColumnType("bit");

                    b.Property<bool>("AbdominalStomachPain")
                        .HasColumnType("bit");

                    b.Property<double>("BodyTemperature")
                        .HasColumnType("float");

                    b.Property<bool>("ChestPain")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeepSetEyes")
                        .HasColumnType("bit");

                    b.Property<bool>("Dehydration")
                        .HasColumnType("bit");

                    b.Property<bool>("Diarrhea")
                        .HasColumnType("bit");

                    b.Property<bool>("DifficultyInBreathing")
                        .HasColumnType("bit");

                    b.Property<bool>("ExpressionlessFaces")
                        .HasColumnType("bit");

                    b.Property<bool>("ExtremeLethargy")
                        .HasColumnType("bit");

                    b.Property<bool>("FrequentHeadache")
                        .HasColumnType("bit");

                    b.Property<bool>("HighFever")
                        .HasColumnType("bit");

                    b.Property<bool>("InternalExternalBleeding")
                        .HasColumnType("bit");

                    b.Property<bool>("IrritabilityAndAggression")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSevere")
                        .HasColumnType("bit");

                    b.Property<bool>("LackOfAppetite")
                        .HasColumnType("bit");

                    b.Property<bool>("Lethargy")
                        .HasColumnType("bit");

                    b.Property<bool>("MultipleBleeding")
                        .HasColumnType("bit");

                    b.Property<bool>("MuscleAchesAndPains")
                        .HasColumnType("bit");

                    b.Property<bool>("Nausea")
                        .HasColumnType("bit");

                    b.Property<bool>("NonitchyRash")
                        .HasColumnType("bit");

                    b.Property<bool>("Orchitis")
                        .HasColumnType("bit");

                    b.Property<bool>("ProlongedHighFever")
                        .HasColumnType("bit");

                    b.Property<bool>("RedEyes")
                        .HasColumnType("bit");

                    b.Property<bool>("SevereBloodLossAndShock")
                        .HasColumnType("bit");

                    b.Property<bool>("SevereHeadache")
                        .HasColumnType("bit");

                    b.Property<bool>("SevereMalaise")
                        .HasColumnType("bit");

                    b.Property<bool>("SevereWateryDiarrhea")
                        .HasColumnType("bit");

                    b.Property<bool>("SkinTexture")
                        .HasColumnType("bit");

                    b.Property<bool>("SoreThroat")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("Vomiting")
                        .HasColumnType("bit");

                    b.Property<bool>("Weakness")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MedicalRecords");
                });

            modelBuilder.Entity("EbolaApp.Models.Prediction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Predictions");
                });

            modelBuilder.Entity("EbolaApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EbolaApp.Models.MedicalRecord", b =>
                {
                    b.HasOne("EbolaApp.Models.User", "User")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EbolaApp.Models.Prediction", b =>
                {
                    b.HasOne("EbolaApp.Models.User", "User")
                        .WithMany("Predictions")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EbolaApp.Models.User", b =>
                {
                    b.Navigation("MedicalRecords");

                    b.Navigation("Predictions");
                });
#pragma warning restore 612, 618
        }
    }
}
